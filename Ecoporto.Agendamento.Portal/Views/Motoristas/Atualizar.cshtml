@model Ecoporto.Agendamento.Portal.Models.ViewModels.MotoristaViewModel
@using Ecoporto.Agendamento.Portal.Helpers
@using Ecoporto.Agendamento.Portal.Extensions
@Styles.Render("~/Content/css/form.css")
@{
    ViewBag.Title = "Atualizar Motorista";
}
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css">
</head>

<section class="content-header mt-5">
    <h1>
        Gerenciamento de Motoristas
    </h1>
    <ol class="breadcrumb">
        <li>
            <a href="#">
                <i class="fa fa-home"></i>Home
            </a>
        </li>
        <li>
            <a href="#">Motoristas</a>
        </li>
        <li class="active">Atualizar Motoristas</li>
    </ol>
</section>

@using (Html.BeginForm())
{
    <div class="card">
        <div class="card-header">
            <i class="fa fa-edit fa-lg"></i>
            Detalhes do Motorista
            <div class="float-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse">
                    <i class="fa fa-minus"></i>
                </button>
            </div>
        </div>
        @using (Html.BeginForm("Atualizar", "Motoristas", FormMethod.Post, new { @id = "meuFormulario" }))
        {
            <div class="card-body">

                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.ValidarFormulario(ViewContext.ViewData.ModelState, true)
                        </div>
                    </div>
                </div>

                @Html.HiddenFor(model => model.Id)

                <div class="row">
                    <div class="ml-3">
                        <input type="checkbox" id="chkestrangeiro" class="form-check-label" for="inlineCheckbox1"> Estrangeiro
                        @Html.HiddenFor(Model => Model.Chkestrangeiro)
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-2" id="cnh">
                        @Html.LabelFor(model => model.CNH, new { @class = "label-required" })
                        @Html.EditorFor(model => model.CNH, new { htmlAttributes = new { @class = "form-control", @id = "CNH", maxlength = "15", autofocus = "autofocus" } })
                        <div id="cnhError" class="text-danger"></div>
                    </div>
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.Nome, new { @class = "label-required" })
                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus", maxlength = "50" } })
                    </div>
                </div>

                <div class="row">
                    <label>&nbsp;&nbsp;&nbsp;&nbsp; Gênero</label>
                </div>
                <div class="row">
                    <div class="form-check-inline">
                        &nbsp;&nbsp;&nbsp;&nbsp; @Html.CheckBoxFor(model => Model.F, new { @class = "form-check-input" })
                        <label class="form-check-label" for="inlineCheckbox1">F</label>
                    </div>
                    <div class="form-check-inline">
                        &nbsp;&nbsp;&nbsp;&nbsp; @Html.CheckBoxFor(model => Model.M, new { @class = "form-check-input" })
                        <label class="form-check-label" for="inlineCheckbox1">M</label>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.DT_Nascimento, new { @class = "label-required" })
                        <div class="input-group date">
                            @Html.TextBoxFor(model => model.DT_Nascimento, new { @class = "form-control", @id = "DT_Nascimento", @placeholder = "dd/mm/yyyy" })
                            <span class="input-group-addon">
                                <i class="glyphicon glyphicon-calendar"></i>
                            </span>
                        </div>

                        <div id="dtNascimentoError" class="text-danger"></div>
                    </div>

                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.ValidadeCNH, new { @class = "label-required" })
                        @Html.EditorFor(model => model.ValidadeCNH, new { htmlAttributes = new { @class = "form-control", @id = "ValidadeCNH" } })
                        <div id="validadeCNHError" class="text-danger"></div>
                    </div>

                    <div class="form-group col-md-3" id="carteirahabilitacao">
                        @Html.LabelFor(model => model.Carteira_Habilitacao)
                        @Html.EditorFor(model => model.Carteira_Habilitacao, new { htmlAttributes = new { @class = "form-control" } })
                    </div>

                    <div class="form-group col-md-2" id="rg">
                        @Html.LabelFor(model => model.RG)
                        @Html.EditorFor(model => model.RG, new { htmlAttributes = new { @class = "form-control", maxlength = "15" } })
                    </div>

                    <div class="col-sm-3" id="orgao">
                        @Html.LabelFor(model => model.Orgao_Emissor)
                        @Html.EditorFor(model => model.Orgao_Emissor, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Orgao_Emissor, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-3">
                        @Html.LabelFor(model => model.Data_Emissao, new { @class = "label-required" })
                        @Html.EditorFor(model => model.Data_Emissao, new { htmlAttributes = new { @class = "form-control", @id = "Data_Emissao" } })
                        <div id="dataEmissaoError" class="text-danger"></div>
                    </div>

                    <div class="col-sm-3" id="passaport">
                        @Html.LabelFor(model => model.Passaport, new { @class = "label-required" })
                        @Html.EditorFor(model => model.Passaport, new { htmlAttributes = new { @class = "form-control" } })
                    </div>

                    <div class="col-sm-3" id="Dt_Passaport">
                        @Html.LabelFor(model => model.Dt_passaport, new { @class = "label-required" })
                        @Html.EditorFor(model => model.Dt_passaport, new { htmlAttributes = new { @class = "form-control" } })
                    </div>

                    <div class="col-sm-3" id="paises">
                        @Html.LabelFor(model => model.Bigrama, new { @class = "label-required" })
                        @Html.DropDownListFor(model => model.Bigrama, new MultiSelectList(Model.Paises, "bigrama", "descr"), string.Empty, new { @class = "form-control" })
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-md-2" id="cpf">
                        @Html.LabelFor(model => model.CPF)
                        @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control cpf", maxlength = "14" } })
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.Celular)
                        @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control celular", maxlength = "15" } })
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.Nextel)
                        @Html.EditorFor(model => model.Nextel, new { htmlAttributes = new { @class = "form-control", maxlength = "20" } })
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.MOP)
                        @Html.EditorFor(model => model.MOP, new { htmlAttributes = new { @class = "form-control", maxlength = "15" } })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.UltimaAlteracao)
                        @Html.EditorFor(model => model.UltimaAlteracao, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    </div>
                </div>

            </div>

            <div class="card-footer">
                <div class="row">
                    <div class="form-group col-md-3">
                        <a href="@Url.Action("Index", "Motoristas")" class="btn btn-secondary btn-block">Retornar</a>
                    </div>
                    <div class="form-group col-md-3 offset-md-6">
                        <!-- Botão Salvar sem a propriedade disabled -->
                        <button type="submit" id="btnSalvar" class="btn btn-info btn-block">Atualizar</button>
                    </div>
                </div>
            </div>

        }



    </div>

}


@section Scripts {
    <!-- jQuery (necessário para o Bootstrap Datepicker e jQuery Mask Plugin) -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>

    <!-- jQuery Mask Plugin -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js"></script>

    <!-- Bootstrap Datepicker -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>

    <!-- Idioma pt-BR do Bootstrap Datepicker -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/locales/bootstrap-datepicker.pt-BR.min.js"></script>

    <!-- Script personalizado -->
    <script src="~/Scripts/Validacoes/ValidacoesMotorista.js"></script>

    <!-- Script personalizado para inicializar o Datepicker e a máscara -->
    <script>
        $(document).ready(function () {
            // Calcula a data de hoje
            var hoje = new Date();

            // Calcula a data de 18 anos atrás (data mínima permitida)
            var minDate = new Date(hoje.getFullYear() - 18, hoje.getMonth(), hoje.getDate());

            // Calcula a data de 100 anos atrás (data máxima permitida)
            var maxDate = new Date(hoje.getFullYear() - 100, hoje.getMonth(), hoje.getDate());

            // Inicializando o Datepicker com a faixa de datas permitida
            $('#DT_Nascimento').datepicker({
                format: 'dd/mm/yyyy',   // Definindo o formato como dd/MM/yyyy
                autoclose: true,        // Fecha o Datepicker automaticamente após a seleção
                todayHighlight: true,   // Destaque a data de hoje no Datepicker
                language: 'pt-BR',      // Configura o idioma
                startDate: maxDate,     // Data mínima: 100 anos atrás
                endDate: minDate        // Data máxima: 18 anos atrás
            }).on('changeDate', function (e) {
                // Chama a função validarDtNascimento do arquivo ValidacoesMotorista.js
                validarDtNascimento($(this));
            });


            // Inicializando o Datepicker para o campo ValidadeCNH
            $('#ValidadeCNH').datepicker({
                format: 'dd/mm/yyyy',
                autoclose: true,
                todayHighlight: true,
                language: 'pt-BR',
                startDate: hoje // Impede a seleção de datas no passado
            }).on('changeDate', function (e) {
                // Chama a função de validação ao fechar o datepicker
                validarValidadeCNH($(this));
            });

            // Inicializando o Datepicker para o campo Data_Emissao
            $('#Data_Emissao').datepicker({
                format: 'dd/mm/yyyy',
                autoclose: true,
                todayHighlight: true,
                language: 'pt-BR',
                endDate: hoje  // Impede a seleção de datas futuras
            }).on('changeDate', function (e) {
                // Chama a função de validação ao fechar o datepicker
                validarDataEmissao($(this));
            });

            // Inicializando máscaras de data
            $('#Validade_CNH, #Data_Emissao, #DT_Nascimento, #Dt_passaport').mask('00/00/0000');

            // Ocultar elementos no início
            $("#carteirahabilitacao, #Dt_Passaport, #passaport, #paises").hide();

            var chke = $("#Chkestrangeiro").val();
            
            //if (chke == true) {
            //    // Se o estrangeiro estiver marcado, exibe as opções corretas
            //    $("#chkestrangeiro").prop('checked', true);
            //    toggleEstrangeiroOptions(true);
            //}

            //// Alternar entre opções de estrangeiro
            //$('#chkestrangeiro').click(function () {
            //    toggleEstrangeiroOptions($(this).is(':checked'));
            //});

            // Alternar gênero
            $('#F').click(function () {
                $('#M').prop('checked', false);
            });

            $('#M').click(function () {
                $('#F').prop('checked', false);
            });


        });

        // Função para alternar exibição de campos para estrangeiros
        //function toggleEstrangeiroOptions(isEstrangeiro) {
        //    if (isEstrangeiro) {
        //        $("#CNH, #rg, #cpf, #orgao").hide();
        //        $("#carteirahabilitacao, #paises, #passaport, #Dt_Passaport").show();
        //        $("#Chkestrangeiro").val(true);
        //    } else {
        //        $("#CNH, #rg, #cpf, #orgao").show();
        //        $("#carteirahabilitacao, #paises, #passaport, #Dt_Passaport").hide();
        //        $("#Chkestrangeiro").val(false);
        //    }
        //}
    </script>
}


